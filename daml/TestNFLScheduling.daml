module TestNFLScheduling where

import Daml.Script
import NFLTestSetup
import NFLMatchBet
import NFLSeason
import SchedulingData

data TestParties = TestParties
    with
        house: Party
        userA: Party
        betType: NFLBetType
        f1UserAccountCid: ContractId UserNFLAccount

setupParties : Script TestParties
setupParties = script do
    house <- allocateParty "House"
    userA <- allocateParty "UserA"
    let 
        betType = NFLBetType with
            issuer = house
    f1UserAccountCid <- submitMulti [userA, betType.issuer] [] do
        createCmd UserNFLAccount with
            betType
            user = userA
            bets = []
            balance = 100.0
    let
        tp = TestParties with ..
    return tp


-- 1. Create Match
testCreateMatch = script do
    tp@TestParties{..} <- setupParties
    TestNFLTeams{..} <- setupNFLTeams

    newMatch <- submit house do
        createCmd Match with
            house
            users = [userA]
            teams = [cityChiefs, sf29ers]
            score = 0
            matchStatus = "In Progress"
            winningTeam = "NA"
            matchNo = 1

    return ()

-- 2. Test Match Add User
testMatchAddUser = script do
    tp@TestParties{..} <- setupParties
    TestNFLTeams{..} <- setupNFLTeams

    newMatch <- submit house do
        createCmd Match with
            house
            users = [userA]
            teams = [cityChiefs, sf29ers]
            score = 0
            matchStatus = "In Progress"
            winningTeam = "NA"
            matchNo = 1
    
    submit house do
        exerciseCmd newMatch MatchAddUser with
            user = userA

    return ()

-- 3. Test Update score
testMatchUpdateScore = script do
    tp@TestParties{..} <- setupParties
    TestNFLTeams{..} <- setupNFLTeams

    newMatch <- submit house do
        createCmd Match with
            house
            users = [userA]
            teams = [cityChiefs, sf29ers]
            score = 0
            matchStatus = "In Progress"
            winningTeam = "NA"
            matchNo = 1
    
    submit house do
        exerciseCmd newMatch UpdateScore with
            newScore = 28

    return ()
-- 4. Test Update Match Status
testUpdateMatchStatus = script do
    tp@TestParties{..} <- setupParties
    TestNFLTeams{..} <- setupNFLTeams

    newMatch <- submit house do
        createCmd Match with
            house
            users = [userA]
            teams = [cityChiefs, sf29ers]
            score = 0
            matchStatus = "In Progress"
            winningTeam = "NA"
            matchNo = 1
    
    submit house do
        exerciseCmd newMatch UpdateMatchStatus with
            newMatchStatus = "Finished"
            winningTeam = "sf29ers"

    return ()
-- 5. Create Season
testCreateSeason = script do
    tp@TestParties{..} <- setupParties
    TestNFLTeams{..} <- setupNFLTeams

    seasonCid <- submit house do
        createCmd Season with
            house
            year = 2023
            matches = []
            teams = [cityChiefs, cowBoys, eagles, sf29ers]
            users = [userA]

    return ()
-- 6. Test Season Add User
testSeasonAddUser = script do
    tp@TestParties{..} <- setupParties
    TestNFLTeams{..} <- setupNFLTeams

    newSeason <- submit house do
        createCmd Season with
            house
            year = 2023
            matches = []
            teams = [cityChiefs, cowBoys, eagles, sf29ers]
            users = [userA]

    submit house do
        exerciseCmd newSeason SeasonAddUser with
            user = userA

    return ()
-- 7. Test Season Add Match 
-- testSeasonAddMatch = script do
--     tp@TestParties{..} <- setupParties
--     TestNFLTeams{..} <- setupNFLTeams
--     testMatches <- setupNFLMatches

--     newSeason <- submit house do
--         createCmd Season with
--             houses
--             year = 2023
--             matches = []
--             teams = [cityChiefs, cowBoys, eagles, sf29ers]
--             users = [userA]

--     submit house do
--         exerciseCmd newSeason AddMatch with
--         -- ideally, pull from setupNFLMatches from NFLTestSetup.daml
--             game =
            
--     return ()
-- 8. Test Season Add Team 
testSeasonAddTeam = script do
    tp@TestParties{..} <- setupParties
    TestNFLTeams{..} <- setupNFLTeams

    newSeason <- submit house do
        createCmd Season with
            house
            year = 2023
            matches = []
            teams = [cityChiefs, cowBoys, eagles, sf29ers]
            users = [userA]

    submit house do
        let 
            bengals = NFLTeam with
                name = "CINCINNATI BENGALS"
                avgWinDiffScore = 11.00
                strategyScore = 11.00

        exerciseCmd newSeason AddTeam with
            team = bengals

    return ()