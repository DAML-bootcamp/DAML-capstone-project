module Account where


data AssetType = AssetType 
  with
    symbol: Text
    issuer: Party
    fungable: Bool
  deriving (Eq,Show)

template Account
  with 
    assetType: AssetType
    amount: Decimal 
    owner: Party
    observers: [Party] 
  where
    signatory owner, assetType.issuer
    observer observers
    ensure if assetType.fungable then amount > 0.0 else amount == 1.0

    key (assetType,owner) :(AssetType,Party) --key has to have atleast one party
    maintainer key._1.issuer --1-1 relationship b/w asset and account
    

template Transfer
  with
    asset: Account
    recipient: Party
  where 
    signatory (signatory asset) 
    observer recipient 

    choice Transfer_Accept: ContractId Account
      controller recipient
      do
        create asset with 
          owner = recipient 
    
    choice Transfer_Reject: ContractId Account
      controller recipient
      do
        create asset 

    choice Transfer_Cancel: ContractId Account
      controller asset.owner
      do
        create asset 

