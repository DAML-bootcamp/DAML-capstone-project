module TestNFL where

import Daml.Script
import NFLTestSetup
import NFLMatchBet
import NFLSeason
import SchedulingData
import DA.List (head)


data TestParties = TestParties
    with
        house: Party
        userA: Party
        userB: Party
        betType: NFLBetType
        nflUserAccountCid: ContractId UserNFLAccount

setupParties : Script TestParties
setupParties = script do
    house <- allocateParty "House"
    userA <- allocateParty "UserA"
    userB <- allocateParty "UserB"
    let 
        betType = NFLBetType with
            issuer = house
            betType="overs"
    nflHouseAccountCid <- submit house do
        createCmd UserNFLAccount with
            betType
            user = house
            bets = []
            balance = 400.0
    nflUserAccountProposalCid <- submit house do
        exerciseCmd nflHouseAccountCid NFL_InviteNewUser with
            recipient = userA
    
    nflUserAccountCid <- submit userA do
        exerciseCmd nflUserAccountProposalCid UserNFLAccountProposal_Accept
    let
        tp = TestParties with ..
    return tp



-- 1. Happy Path: Cancel Bet
testCancelNFLBetProposal = script do
    tp@TestParties{..} <- setupParties
   
    (testNFLTeams@TestNFLTeams{..}) <- setupNFLTeams

    let 
        match = MatchType with
            matchNo = 1

    
    -- Create Bet
    betCid <- submit house do
        createCmd NFLMatchBet with
            issuer = house
            match 
            betType
            userBets = []
            betStatus = Open
            odds = 0.1
            users=[]
    --Create a bet payload for user
    let 
        userBet=UserBet with
            user=userA
            betScore=22
            betAmount=100.0
            oversunders="overs"
            matchNo=1


    -- Create Bet Proposal
    nflBetProposalCid <- submit userA do
        createCmd NFLBetProposal with
            bet = userBet
            user = userA
            betType
            userNFLAccountCid=nflUserAccountCid
            
    
    -- Cancel Bet Proposal
    submit userA do
        exerciseCmd nflBetProposalCid NFLBetProposal_Cancel
    
    return ()



-- 2. Happy Path: Reject Bet
testRejectNFLBetProposal = script do
    tp@TestParties{..} <- setupParties
   
    (testNFLTeams@TestNFLTeams{..}) <- setupNFLTeams

    let 
        match = MatchType with
            matchNo = 1

    
    -- Create Bet
    betCid <- submit house do
        createCmd NFLMatchBet with
            issuer = house
            match 
            betType
            userBets = []
            betStatus = Open
            odds = 0.1
            users=[]
    --Create a bet payload for user
    let 
        userBet=UserBet with
            user=userA
            betScore=22
            betAmount=100.0
            oversunders="overs"
            matchNo=1


    -- Create Bet Proposal
    nflBetProposalCid <- submit userA do
        createCmd NFLBetProposal with
            bet = userBet
            user = userA
            betType
            userNFLAccountCid=nflUserAccountCid
    
    -- Reject Bet Proposal
    submit house do
        exerciseCmd nflBetProposalCid NFLBetProposal_Reject
    
    return ()

-- 3. Happy Path: Create Bet, Accept Proposal
testAcceptNFLBetProposal = script do
    tp@TestParties{..} <- setupParties
   
    (testNFLTeams@TestNFLTeams{..}) <- setupNFLTeams

    let 
        match = MatchType with
            matchNo = 1

    
    -- Create Bet
    betCid <- submit house do
        createCmd NFLMatchBet with
            issuer = house
            match 
            betType
            userBets = []
            betStatus = Open
            odds = 0.1
            users=[]
    --Create a bet payload for user
    let 
        userBet=UserBet with
            user=userA
            betScore=22
            betAmount=100.0
            oversunders="overs"
            matchNo=1


    -- Create Bet Proposal
    nflBetProposalCid <- submit userA do
        createCmd NFLBetProposal with
            bet = userBet
            user = userA
            betType
            userNFLAccountCid=nflUserAccountCid
    
    -- Accept Bet Proposal
    submit house do
        exerciseCmd nflBetProposalCid Transfer_Accept
    
    return ()

-- 4. Happy Path : Create bet,accept proposal close bet
testCloseNFLBet = script do
    tp@TestParties{..} <- setupParties
   
    (testNFLTeams@TestNFLTeams{..}) <- setupNFLTeams

    let 
        match = MatchType with
            matchNo = 1

    
    -- Create Bet
    betCid <- submit house do
        createCmd NFLMatchBet with
            issuer = house
            match 
            betType
            userBets = []
            betStatus = Open
            odds = 0.3
            users=[]
    --Create a bet payload for user
    let 
        userBet=UserBet with
            user=userA
            betScore=22
            betAmount=100.0
            oversunders="Overs"
            matchNo=1


    -- Create Bet Proposal
    nflBetProposalCid <- submit userA do
        createCmd NFLBetProposal with
            bet = userBet
            user = userA
            betType
            userNFLAccountCid=nflUserAccountCid
    
    -- Accept Bet Proposal
    newBetContractID<-submit house do
        exerciseCmd nflBetProposalCid Transfer_Accept
    --Change Bet status to settled

    newBetContractID<-submit house do 
        exerciseCmd newBetContractID UpdateBetStatus with
            newBetStatus=Settled

    --Payout the winnings

    newAccountCids<-submit  house do 
        exerciseCmd newBetContractID CalculateBetWinnings with
            finalMatchScore=20 
    let newWinnerAccontCid = head newAccountCids
    nflUserAccountCid <- submit userA do
        exerciseCmd newWinnerAccontCid UserNFLAccountProposal_Accept
    return ()
    
-- 5. Happy Path : Create bet,accept proposal multiple  close bet
testCloseMultipleNFLBet = script do
    tp@TestParties{..} <- setupParties
   
    (testNFLTeams@TestNFLTeams{..}) <- setupNFLTeams

    let 
        match = MatchType with
            matchNo = 1

    
    -- Create Bet
    betCid <- submit house do
        createCmd NFLMatchBet with
            issuer = house
            match 
            betType
            userBets = []
            betStatus = Open
            odds = 0.3
            users=[]
    --Create a bet payload for user
    let 
        userBet=UserBet with
            user=userA
            betScore=22
            betAmount=100.0
            oversunders="Overs"
            matchNo=1


    -- Create Bet Proposal
    nflBetProposalCid <- submit userA do
        createCmd NFLBetProposal with
            bet = userBet
            user = userA
            betType
            userNFLAccountCid=nflUserAccountCid
    
    -- Accept Bet Proposal
    newBetContractID<-submit house do
        exerciseCmd nflBetProposalCid Transfer_Accept
-- UserB places a bet
    nflHouseAccountCid <- submit house do
        createCmd UserNFLAccount with
            betType
            user = house
            bets = []
            balance = 400.0
    nflUserAccountProposalCid <- submit house do
        exerciseCmd nflHouseAccountCid NFL_InviteNewUser with
            recipient = userB
    
    nflUserBAccountCid <- submit userB do
        exerciseCmd nflUserAccountProposalCid UserNFLAccountProposal_Accept
    
    let 
        userBBet=UserBet with
            user=userB
            betScore=19
            betAmount=100.0
            oversunders="Overs"
            matchNo=1
    nflBetBProposalCid <- submit userB do
        createCmd NFLBetProposal with
            bet = userBBet
            user = userB
            betType
            userNFLAccountCid=nflUserBAccountCid
    newBetContractID<-submit house do
        exerciseCmd nflBetBProposalCid Transfer_Accept
    --Change Bet status to settled

    newBetContractID<-submit house do 
        exerciseCmd newBetContractID UpdateBetStatus with
            newBetStatus=Settled

    --Payout the winnings

    winnigsProposalCids<-submit  house do 
        exerciseCmd newBetContractID CalculateBetWinnings with
            finalMatchScore=20 
    
    return ()

-- 6. Happy Path: Create Match
testCreateMatch = script do
    tp@TestParties{..} <- setupParties
    TestNFLTeams{..} <- setupNFLTeams

    newMatch <- submit house do
        createCmd Match with
            house
            users = [userA]
            teams = [cityChiefs, sf29ers]
            score = 0
            matchStatus = "In Progress"
            winningTeam = "NA"
            matchNo = 1

    return ()

-- 7. Happy Path: Test Match Add User
testMatchAddUser = script do
    tp@TestParties{..} <- setupParties
    TestNFLTeams{..} <- setupNFLTeams

    newMatch <- submit house do
        createCmd Match with
            house
            users = [userA]
            teams = [cityChiefs, sf29ers]
            score = 0
            matchStatus = "In Progress"
            winningTeam = "NA"
            matchNo = 1
    
    submit house do
        exerciseCmd newMatch MatchAddUser with
            user = userB

    return ()

-- 8. Happy Path: Test Update score
testMatchUpdateScore = script do
    tp@TestParties{..} <- setupParties
    TestNFLTeams{..} <- setupNFLTeams

    newMatch <- submit house do
        createCmd Match with
            house
            users = [userA]
            teams = [cityChiefs, sf29ers]
            score = 0
            matchStatus = "In Progress"
            winningTeam = "NA"
            matchNo = 1
    
    submit house do
        exerciseCmd newMatch UpdateScore with
            newScore = 28

    return ()

-- 9. Happy Path: Test Update Match Status
testUpdateMatchStatus = script do
    tp@TestParties{..} <- setupParties
    TestNFLTeams{..} <- setupNFLTeams

    newMatch <- submit house do
        createCmd Match with
            house
            users = [userA]
            teams = [cityChiefs, sf29ers]
            score = 0
            matchStatus = "In Progress"
            winningTeam = "NA"
            matchNo = 1
    
    submit house do
        exerciseCmd newMatch UpdateMatchStatus with
            newMatchStatus = "Finished"
            winningTeam = "sf29ers"

    return ()

-- 10. Happy Path: Create Season
testCreateSeason = script do
    tp@TestParties{..} <- setupParties
    TestNFLTeams{..} <- setupNFLTeams

    seasonCid <- submit house do
        createCmd Season with
            house
            year = 2023
            matches = []
            teams = [cityChiefs, cowBoys, eagles, sf29ers]
            users = [userA]

    return ()

--11. Happy Path: Test Season Add User
testSeasonAddUser = script do
    tp@TestParties{..} <- setupParties
    TestNFLTeams{..} <- setupNFLTeams

    newSeason <- submit house do
        createCmd Season with
            house
            year = 2023
            matches = []
            teams = [cityChiefs, cowBoys, eagles, sf29ers]
            users = [userA]

    submit house do
        exerciseCmd newSeason SeasonAddUser with
            user = userA

    return ()

-- 12. Happy Path: Test Season Add Match 
testSeasonAddMatch = script do
    tp@TestParties{..} <- setupParties
    TestNFLTeams{..} <- setupNFLTeams

    newSeason <- submit house do
        createCmd Season with
            house
            year = 2023
            matches = []
            teams = [cityChiefs, cowBoys, eagles, sf29ers]
            users = [userA]

    match1 <- submit house do
        createCmd Match with
            house = house
            users = [userA]
            teams= [cityChiefs,cowBoys]
            score=0
            matchStatus="Scheduled"
            winningTeam="NA"
            matchNo=1

    submit house do
        exerciseCmd newSeason AddMatch with
            game = match1
            
    return ()

-- 13. Happy Path: Test Season Add Team 
testSeasonAddTeam = script do
    tp@TestParties{..} <- setupParties
    TestNFLTeams{..} <- setupNFLTeams

    newSeason <- submit house do
        createCmd Season with
            house
            year = 2023
            matches = []
            teams = [cityChiefs, cowBoys, eagles, sf29ers]
            users = [userA]

    submit house do
        let 
            bengals = NFLTeam with
                name = "CINCINNATI BENGALS"
                avgWinDiffScore = 11.00
                strategyScore = 11.00

        exerciseCmd newSeason AddTeam with
            team = bengals

    return ()

--14. Unhappy Path : Close an ongoing bet
testCloseOngoingBet=script do
    tp@TestParties{..} <- setupParties
   
    (testNFLTeams@TestNFLTeams{..}) <- setupNFLTeams

    let 
        match = MatchType with
            matchNo = 1

    
    -- Create Bet
    betCid <- submit house do
        createCmd NFLMatchBet with
            issuer = house
            match 
            betType
            userBets = []
            betStatus = Open
            odds = 0.3
            users=[]
    --Create a bet payload for user
    let 
        userBet=UserBet with
            user=userA
            betScore=22
            betAmount=100.0
            oversunders="Overs"
            matchNo=1


    -- Create Bet Proposal
    nflBetProposalCid <- submit userA do
        createCmd NFLBetProposal with
            bet = userBet
            user = userA
            betType
            userNFLAccountCid=nflUserAccountCid
    
    -- Accept Bet Proposal
    newBetContractID<-submit house do
        exerciseCmd nflBetProposalCid Transfer_Accept


    --Payout the winnings

    submitMustFail house do 
        exerciseCmd newBetContractID CalculateBetWinnings with
            finalMatchScore=20 

    return ()

--15. Unhappy Path : insufficent balance for bet
testLowBalanceBet=script do
    tp@TestParties{..} <- setupParties
   
    (testNFLTeams@TestNFLTeams{..}) <- setupNFLTeams

    let 
        match = MatchType with
            matchNo = 1

    
    -- Create Bet
    betCid <- submit house do
        createCmd NFLMatchBet with
            issuer = house
            match 
            betType
            userBets = []
            betStatus = Open
            odds = 0.3
            users=[]
    --Create a bet payload for user
    let 
        userBet=UserBet with
            user=userA
            betScore=22
            betAmount=500.0
            oversunders="Overs"
            matchNo=1


    -- Create Bet Proposal
    nflBetProposalCid <- submit userA do
        createCmd NFLBetProposal with
            bet = userBet
            user = userA
            betType
            userNFLAccountCid=nflUserAccountCid
    
    -- Accept Bet Proposal
    newBetContractID<-submitMustFail house do
        exerciseCmd nflBetProposalCid Transfer_Accept

    return ()