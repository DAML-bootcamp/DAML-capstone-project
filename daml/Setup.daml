module Setup where

import Scheduling
import SchedulingData
import NflSeason
import Daml.Script

{--

  Setup parties

--}
data TestParties = TestParties with
  houseParty: Party
  usersParty: [Party]

setupTestParties = script do
  houseParty <- allocatePartyWithHint "House" (PartyIdHint "House")
  userA <- allocatePartyWithHint "UserA" (PartyIdHint "UserA")
  userB <- allocatePartyWithHint "UserB" (PartyIdHint "UserB")
  userC <- allocatePartyWithHint "UserC" (PartyIdHint "UserC")
  let
    usersParty = [userA, userB, userC]
  return TestParties with
    ..

{--

  Setup racing teams

--}
data TestTeams = TestTeams with
  redbull: Team
  ferrari: Team
  mercedes: Team
  mclaren: Team

setupTeams = script do
  let
    redbull = Team with
      name = "Oracle Red Bull Racing"
      carScore = 10.00
      strategyScore = 10.00

    ferrari = Team with
      name = "Scuderia Ferrari"
      carScore = 7.50
      strategyScore = 6.50

    mercedes = Team with
      name = "Mercedes AMG Petronas F1 Team"
      carScore = 8.00
      strategyScore = 9.00

    mclaren = Team with
      name = "McLaren Racing Limited"
      carScore = 6.00
      strategyScore = 6.00

  return TestTeams with
    ..

--setting up nfl teams

data TestNFLTeams = TestNFLTeams with
  cityChiefs: NFLTeam
  cowBoys: NFLTeam
  eagles: NFLTeam
  sf29ers: NFLTeam

setupNFLTeams = script do
  let
    cityChiefs = NFLTeam with
      name = "KANSAS CITY CHIEFS"
      avgWinDiffScore = 10.00
      strategyScore = 10.00

    cowBoys = NFLTeam with
      name = "DALLAS COWBOYS"
      avgWinDiffScore = 7.50
      strategyScore = 6.50

    eagles = NFLTeam with
      name = "PHILADELPHIA EAGLES"
      avgWinDiffScore = 8.00
      strategyScore = 9.00

    sf29ers = NFLTeam with
      name = "SAN FRANCISCO 49ERS"
      avgWinDiffScore = 6.00
      strategyScore = 6.00

  return TestNFLTeams with
    ..

{--

  Setup track information for each racetrack

--}
data TestTrackInfos = TestTrackInfos with
  spa: TrackInfo
  monaco: TrackInfo
  silverstone: TrackInfo

setupTestTrackInfo = script do
  let
    spa = TrackInfo with
      year = 1921
      country = "Belgium"
      trackName = "Circuit de Spa-Francorchamps"
      lengthKM = 14.982

    monaco = TrackInfo with
      year = 1929
      country = "Monaco"
      trackName = "Circuit de Monaco"
      lengthKM = 3.337

    silverstone = TrackInfo with
      year = 1947
      country = "England"
      trackName = "Silverstone Circuit"
      lengthKM = 5.891
  return TestTrackInfos with
    ..

{--

  Setup racers

--}

data TestRacers = TestRacers with
  verstappen: Racer
  perez: Racer
  leclerc: Racer
  sainz: Racer
  hamilton: Racer
  russell: Racer
  norris: Racer
  piastri: Racer

setupTestRacers = script do
  (testTeams@TestTeams{..}) <- setupTeams
  let
    verstappen = Racer with
      name = "Max Emilian Verstappen"
      speedScore = 10.00
      team = redbull
      number = 1
      championshipStanding = 0

    perez = Racer with
      name = "Sergio Michel Pérez Mendoza"
      speedScore = 8.00
      team = redbull
      number = 11
      championshipStanding = 0

    leclerc = Racer with
      name = "Charles Marc Hervé Perceval Leclerc "
      speedScore = 8.50
      team = ferrari
      number = 16
      championshipStanding = 0

    sainz = Racer with
      name = "Carlos Sainz Vázquez de Castro"
      speedScore = 7.50
      team = ferrari
      number = 55
      championshipStanding = 0

    hamilton = Racer with
      name = "Lewis Carl Davidson Hamilton"
      speedScore = 9.50
      team = mercedes
      number = 44
      championshipStanding = 0

    russell = Racer with
      name = "George William Russell"
      speedScore = 8.50
      team = mercedes
      number = 63
      championshipStanding = 0

    norris = Racer with
      name = "Lando Norris"
      speedScore = 7.00
      team = mclaren
      number = 4
      championshipStanding = 0

    piastri = Racer with
      name = "Oscar Jack Piastri"
      speedScore = 5.00
      team = mclaren
      number = 81
      championshipStanding = 0

  return TestRacers with
    ..

{--

  Setup racer positions for leaderboards

--}

data TestRacerPositions = TestRacerPositions with
  verstappenPos: RacerPosition
  perezPos: RacerPosition
  leclercPos: RacerPosition
  sainzPos: RacerPosition
  hamiltonPos: RacerPosition
  russellPos: RacerPosition
  norrisPos: RacerPosition
  piastriPos: RacerPosition

setupRacerPositions = script do
  (testRacers@TestRacers{..}) <- setupTestRacers
  let
    verstappenPos = RacerPosition with
      racer = verstappen
      position = 1

    perezPos = RacerPosition with
      racer = perez
      position = 2

    leclercPos = RacerPosition with
      racer = leclerc
      position = 4

    sainzPos = RacerPosition with
      racer = sainz
      position = 6

    hamiltonPos = RacerPosition with
      racer = hamilton
      position = 3

    russellPos = RacerPosition with
      racer = russell
      position = 5

    norrisPos = RacerPosition with
      racer = norris
      position = 7

    piastriPos = RacerPosition with
      racer = piastri
      position = 8
    
    racerPos = [verstappenPos, perezPos, hamiltonPos, leclercPos, russellPos, norrisPos, piastriPos]

  return racerPos

{--

  Setup leaderboards for each race

--}

data TestLeaderboards = TestLeaderboards with
  spaLeaderboard: Leaderboard
  monacoLeaderboard: Leaderboard
  silverstoneLeaderboard: Leaderboard

setupRaceLeaderboards = script do
  (testParties@TestParties{..}) <- setupTestParties
  (testTrackInfos@TestTrackInfos{..}) <- setupTestTrackInfo
  positions <- setupRacerPositions

  let
    spaLeaderboard = Leaderboard with
      positions
      isRaceLeaderboard = True
  
    monacoLeaderboard = spaLeaderboard

    silverstoneLeaderboard = spaLeaderboard
    
    championshipLeaderboard = Leaderboard with
        positions
        isRaceLeaderboard = False
  
  return (testParties, spaLeaderboard, monacoLeaderboard, silverstoneLeaderboard, championshipLeaderboard)

{--

  Setup races 

--}

data TestRaces = TestRaces with
  spa: Race
  monaco: Race
  silverstone: Race

setupTestRaces = script do
  (testParties@TestParties{..}, spaLeaderboard, monacoLeaderboard, silverstoneLeaderboard, championshipLeaderboard) <- setupRaceLeaderboards
  (testTrackInfos@TestTrackInfos{..}) <- setupTestTrackInfo

  spaRace <- submit houseParty do
    createCmd Race with
      house = houseParty
      users = usersParty
      trackInfo = spa
      leaderboard = spaLeaderboard
      status = "Upcoming"
  
  monacoRace <- submit houseParty do
    createCmd Race with
      house = houseParty
      users = usersParty
      trackInfo = monaco
      leaderboard = monacoLeaderboard
      status = "Upcoming"
  
  silverstoneRace <- submit houseParty do
    createCmd Race with
      house = houseParty
      users = usersParty
      trackInfo = silverstone
      leaderboard = silverstoneLeaderboard
      status = "Upcoming"
  
  return (testParties, spaRace, monacoRace, silverstoneRace, championshipLeaderboard)
--setup matches for a nfl season

setupTestMatches = script do

  (testNFLTeams@TestNFLTeams{..}) <- setupNFLTeams
  (testParties@TestParties{..}) <- setupTestParties

  match1 <- submit houseParty do
    createCmd Match with
      house = houseParty
      users = usersParty
      teams= [cityChiefs,cowBoys]
      score=0
      matchStatus="Scheduled"
      winningTeam="NA"
  
  match2 <- submit houseParty do
    createCmd Match with
      house = houseParty
      users = usersParty
      teams= [eagles,sf29ers]
      score=0
      matchStatus="Scheduled"
      winningTeam="NA"
  
  match3 <- submit houseParty do
    createCmd Match with
      house = houseParty
      users = usersParty
      teams= [cowBoys,eagles]
      score=0
      matchStatus="Scheduled"
      winningTeam="NA"
  
  return (testParties,match1, match2,match3,cityChiefs,cowBoys,eagles,sf29ers)



{--

  Setup season

--}

setupSeason = script do
  (testParties@TestParties{..}, spaRace, monacoRace, silverstoneRace, championshipLeaderboard) <- setupTestRaces
  (testRacers@TestRacers{..}) <- setupTestRacers

  seasonCid <- submit houseParty do
    createCmd Scheduling.Season with
      house = houseParty
      users = usersParty
      year = 2023
      races = [spaRace, monacoRace, silverstoneRace]
      racers = [verstappen, perez, hamilton, russell, leclerc, sainz, norris, piastri]
      championshipStandings = championshipLeaderboard
      status = "Upcoming"

  return (testParties, seasonCid)

setupNFLSeason = script do
  (testParties@TestParties{..}, match1, match2,match3,cityChiefs,eagles,sf29ers,cowBoys) <- setupTestMatches
  

  nflSeasonCid <- submit houseParty do
    createCmd NflSeason.Season with
      house = houseParty
      users = usersParty
      year = 2023
      matches = [match1, match2, match3]
      teams=[cityChiefs,eagles,sf29ers,cowBoys]

  return (testParties, nflSeasonCid)
